services:
  postgres_db:
    image: postgres:17
    container_name: postgres_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  employee_service:
    build: ./ms_employee
    container_name: employee_service
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${EMPLOYEE_PORT}:8080"
    depends_on:
      postgres_db:
        condition: service_healthy

  equipment_service:
    build: ./ms_equipments
    container_name: equipment_service
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${EQUIPMENT_PORT}:8080"
    depends_on:
      postgres_db:
        condition: service_healthy

  project_service:
    build: ./ms_projects
    container_name: project_service
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${EQUIPMENT_PORT}:8080"
    depends_on:
      postgres_db:
        condition: service_healthy

volumes:
  postgres_data: